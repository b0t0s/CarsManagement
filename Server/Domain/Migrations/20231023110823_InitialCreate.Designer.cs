// <auto-generated />
using System;
using CarsManagement.Server.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarsManagement.Server.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231023110823_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "BMW",
                            LicensePlate = "#A16541",
                            Model = "Z3"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Mazda",
                            LicensePlate = "#321E7C",
                            Model = "RX8"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Audi",
                            LicensePlate = "#A4B268",
                            Model = "A6"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Hyundai",
                            LicensePlate = "#003EF5",
                            Model = "Elantra"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Lincoln",
                            LicensePlate = "#1688FB",
                            Model = "MKX"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Bugatti",
                            LicensePlate = "#8900CA",
                            Model = "Veyron"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Tesla",
                            LicensePlate = "#4A2441",
                            Model = "Model S"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Chevrolet",
                            LicensePlate = "#06ADAC",
                            Model = "Camaro"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Ford",
                            LicensePlate = "#363003",
                            Model = "Mustang"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Dodge",
                            LicensePlate = "#953172",
                            Model = "Charger"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Nissan",
                            LicensePlate = "#B2BBCC",
                            Model = "GTR"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Honda",
                            LicensePlate = "#000460",
                            Model = "Civic"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Toyota",
                            LicensePlate = "#E8AC62",
                            Model = "Supra"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Subaru",
                            LicensePlate = "#EC0A9B",
                            Model = "Impreza"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Ferrari",
                            LicensePlate = "#90CBE5",
                            Model = "488"
                        });
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ManagerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountName = "Mick Jagger",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 2,
                            AccountName = "Jimi Hendrix",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 3,
                            AccountName = "Miles Davis",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 4,
                            AccountName = "John Coltrane",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 5,
                            AccountName = "B.B. King",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 6,
                            AccountName = "Muddy Waters",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 7,
                            AccountName = "James Hetfield",
                            PasswordHash = "hashed_password_here"
                        },
                        new
                        {
                            Id = 8,
                            AccountName = "Ozzy Osbourne",
                            PasswordHash = "hashed_password_here"
                        });
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingLotModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LotLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("ParkingLots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LotLocation = "Rock",
                            LotName = "Garage California",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 2,
                            LotLocation = "Rock",
                            LotName = "Garage of the Rising Sun",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 3,
                            LotLocation = "Rock",
                            LotName = "Voodoo Car",
                            ManagerId = 2
                        },
                        new
                        {
                            Id = 4,
                            LotLocation = "Rock",
                            LotName = "Crosstown Traffic",
                            ManagerId = 2
                        },
                        new
                        {
                            Id = 5,
                            LotLocation = "Metal",
                            LotName = "Enter Garage",
                            ManagerId = 7
                        },
                        new
                        {
                            Id = 6,
                            LotLocation = "Metal",
                            LotName = "Wherever I May Roam",
                            ManagerId = 7
                        },
                        new
                        {
                            Id = 7,
                            LotLocation = "Metal",
                            LotName = "Crazy Car",
                            ManagerId = 8
                        },
                        new
                        {
                            Id = 8,
                            LotLocation = "Metal",
                            LotName = "No More Spots",
                            ManagerId = 8
                        });
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingSpotModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsInclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<int>("LotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LotId");

                    b.ToTable("ParkingSpots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 1
                        },
                        new
                        {
                            Id = 5,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 2
                        },
                        new
                        {
                            Id = 7,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 2
                        },
                        new
                        {
                            Id = 8,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 2
                        },
                        new
                        {
                            Id = 9,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 2
                        },
                        new
                        {
                            Id = 10,
                            IsInclusive = true,
                            IsOccupied = true,
                            LotId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 3
                        },
                        new
                        {
                            Id = 12,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 3
                        },
                        new
                        {
                            Id = 13,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 3
                        },
                        new
                        {
                            Id = 14,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 3
                        },
                        new
                        {
                            Id = 15,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 3
                        },
                        new
                        {
                            Id = 16,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 4
                        },
                        new
                        {
                            Id = 17,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 4
                        },
                        new
                        {
                            Id = 18,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 4
                        },
                        new
                        {
                            Id = 19,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 4
                        },
                        new
                        {
                            Id = 20,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 4
                        },
                        new
                        {
                            Id = 21,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 5
                        },
                        new
                        {
                            Id = 22,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 5
                        },
                        new
                        {
                            Id = 23,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 5
                        },
                        new
                        {
                            Id = 24,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 5
                        },
                        new
                        {
                            Id = 25,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 5
                        },
                        new
                        {
                            Id = 26,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 6
                        },
                        new
                        {
                            Id = 27,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 6
                        },
                        new
                        {
                            Id = 28,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 6
                        },
                        new
                        {
                            Id = 29,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 6
                        },
                        new
                        {
                            Id = 30,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 6
                        },
                        new
                        {
                            Id = 31,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 7
                        },
                        new
                        {
                            Id = 32,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 7
                        },
                        new
                        {
                            Id = 33,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 7
                        },
                        new
                        {
                            Id = 34,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 7
                        },
                        new
                        {
                            Id = 35,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 7
                        },
                        new
                        {
                            Id = 36,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 8
                        },
                        new
                        {
                            Id = 37,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 8
                        },
                        new
                        {
                            Id = 38,
                            IsInclusive = false,
                            IsOccupied = true,
                            LotId = 8
                        },
                        new
                        {
                            Id = 39,
                            IsInclusive = false,
                            IsOccupied = false,
                            LotId = 8
                        },
                        new
                        {
                            Id = 40,
                            IsInclusive = true,
                            IsOccupied = false,
                            LotId = 8
                        });
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ParkingTickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountPaid = 15m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6404),
                            ExitTime = new DateTime(2023, 10, 23, 19, 8, 23, 790, DateTimeKind.Local).AddTicks(6460)
                        },
                        new
                        {
                            Id = 2,
                            AmountPaid = 13m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6473),
                            ExitTime = new DateTime(2023, 10, 23, 17, 8, 23, 790, DateTimeKind.Local).AddTicks(6475)
                        },
                        new
                        {
                            Id = 3,
                            AmountPaid = 18m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6477),
                            ExitTime = new DateTime(2023, 10, 23, 22, 8, 23, 790, DateTimeKind.Local).AddTicks(6478)
                        },
                        new
                        {
                            Id = 4,
                            AmountPaid = 1m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6480),
                            ExitTime = new DateTime(2023, 10, 23, 19, 8, 23, 790, DateTimeKind.Local).AddTicks(6482)
                        },
                        new
                        {
                            Id = 5,
                            AmountPaid = 15m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6484),
                            ExitTime = new DateTime(2023, 10, 23, 19, 8, 23, 790, DateTimeKind.Local).AddTicks(6486)
                        },
                        new
                        {
                            Id = 6,
                            AmountPaid = 25m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6489),
                            ExitTime = new DateTime(2023, 10, 23, 20, 8, 23, 790, DateTimeKind.Local).AddTicks(6491)
                        },
                        new
                        {
                            Id = 7,
                            AmountPaid = 30m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6493),
                            ExitTime = new DateTime(2023, 10, 23, 21, 8, 23, 790, DateTimeKind.Local).AddTicks(6509)
                        },
                        new
                        {
                            Id = 8,
                            AmountPaid = 20m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6511),
                            ExitTime = new DateTime(2023, 10, 23, 18, 8, 23, 790, DateTimeKind.Local).AddTicks(6513)
                        },
                        new
                        {
                            Id = 9,
                            AmountPaid = 22m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6515),
                            ExitTime = new DateTime(2023, 10, 23, 19, 8, 23, 790, DateTimeKind.Local).AddTicks(6517)
                        },
                        new
                        {
                            Id = 10,
                            AmountPaid = 28m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6519),
                            ExitTime = new DateTime(2023, 10, 23, 20, 8, 23, 790, DateTimeKind.Local).AddTicks(6521)
                        },
                        new
                        {
                            Id = 11,
                            AmountPaid = 32m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6523),
                            ExitTime = new DateTime(2023, 10, 23, 21, 8, 23, 790, DateTimeKind.Local).AddTicks(6524)
                        },
                        new
                        {
                            Id = 12,
                            AmountPaid = 35m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6526),
                            ExitTime = new DateTime(2023, 10, 23, 22, 8, 23, 790, DateTimeKind.Local).AddTicks(6528)
                        },
                        new
                        {
                            Id = 13,
                            AmountPaid = 40m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6711),
                            ExitTime = new DateTime(2023, 10, 23, 23, 8, 23, 790, DateTimeKind.Local).AddTicks(6712)
                        },
                        new
                        {
                            Id = 14,
                            AmountPaid = 45m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6714),
                            ExitTime = new DateTime(2023, 10, 24, 0, 8, 23, 790, DateTimeKind.Local).AddTicks(6716)
                        },
                        new
                        {
                            Id = 15,
                            AmountPaid = 50m,
                            EntryTime = new DateTime(2023, 10, 23, 14, 8, 23, 790, DateTimeKind.Local).AddTicks(6717),
                            ExitTime = new DateTime(2023, 10, 24, 1, 8, 23, 790, DateTimeKind.Local).AddTicks(6719)
                        });
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.CarModel", b =>
                {
                    b.HasOne("CarsManagement.Server.Domain.Entities.ParkingSpotModel", null)
                        .WithOne("ParkedCar")
                        .HasForeignKey("CarsManagement.Server.Domain.Entities.CarModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingLotModel", b =>
                {
                    b.HasOne("CarsManagement.Server.Domain.Entities.ManagerModel", null)
                        .WithMany("ManagedParkingLots")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingSpotModel", b =>
                {
                    b.HasOne("CarsManagement.Server.Domain.Entities.ParkingLotModel", null)
                        .WithMany("ParkingSpots")
                        .HasForeignKey("LotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingTicketModel", b =>
                {
                    b.HasOne("CarsManagement.Server.Domain.Entities.CarModel", "Car")
                        .WithOne("ParkingTicket")
                        .HasForeignKey("CarsManagement.Server.Domain.Entities.ParkingTicketModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.CarModel", b =>
                {
                    b.Navigation("ParkingTicket")
                        .IsRequired();
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ManagerModel", b =>
                {
                    b.Navigation("ManagedParkingLots");
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingLotModel", b =>
                {
                    b.Navigation("ParkingSpots");
                });

            modelBuilder.Entity("CarsManagement.Server.Domain.Entities.ParkingSpotModel", b =>
                {
                    b.Navigation("ParkedCar");
                });
#pragma warning restore 612, 618
        }
    }
}
